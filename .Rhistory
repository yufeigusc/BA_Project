summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, forecast_3_month, sales_3_month))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, forecast_3_month, forecast_9_month, sales_3_month, rev_stop))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, forecast_3_month, forecast_9_month, sales_3_month, rev_stop, stop_auto_buy))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, forecast_3_month, forecast_9_month, sales_3_month, rev_stop, stop_auto_buy, oe_constraint))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, forecast_3_month, forecast_9_month, sales_3_month, min_bank))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c(perf_12_month_avg, sales_9_month, sales_6_month, forecast_9_month, forecast_6_month))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c( sales_9_month, sales_6_month, forecast_9_month, forecast_6_month))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c( sales_9_month, , forecast_9_month))
temp_data2 = train
temp_data2 = subset(temp_data2, select = -c( sales_9_month , forecast_9_month))
set.seed(123)
model_tempdata1 = glm(went_on_backorder ~ . - sku, data = temp_data2, family = "binomial")
summary(model_tempdata1)
set.seed(123)
train(went_on_backorder ~ . - sku, data = temp_data2, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
set.seed(123)
train(went_on_backorder ~ national_inv, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
print(colnames(train))
model_tempdata1 = glm(went_on_backorder ~ deck_risk+oe_constraint+ppap_risk+stop_auto_buy+rev_stop, data = temp_data2, family = "binomial")
summary(model_tempdata1)
setwd("~/")
setwd("D:/文件/SMU/BA_628/BA_Project")
knitr::opts_chunk$set(warning = FALSE,
fig.height = 6,
fig.width = 6,
fig.align = "center")
train_before_factor = read.csv("Competition_Train.csv")
missing_values <- any(is.na(train_before_factor))
# Print the result
print(missing_values)
train = read.csv("Competition_Train.csv")
test = read.csv("Competition_Test.csv")
#str(train)
#str(test)
train$potential_issue = as.factor(train$potential_issue)
train[18:23] = lapply(train[18:23], as.factor)
#str(train)
test$potential_issue = as.factor(test$potential_issue)
test[18:22] = lapply(test[18:22], as.factor)
#str(test)
library(plyr)
train$potential_issue = revalue(train$potential_issue, c("0"="No", "1"="Yes"))
train[18:23] = lapply(train[18:23], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(train)
test$potential_issue = revalue(test$potential_issue, c("0"="No", "1"="Yes"))
test[18:22] = lapply(test[18:22], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(test)
library(caret)
library(e1071)
fitControl = trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
set.seed(123)
#train(went_on_backorder ~ . - sku, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
set.seed(123)
#train(went_on_backorder ~ national_inv, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data1 = train
temp_data1$forecast_1to3 = train$forecast_3_month
temp_data1$forecast_3to6 = train$forecast_6_month - train$forecast_3_month
temp_data1$forecast_6to9 = train$forecast_9_month - train$forecast_6_month
average_forecast_3 <- mean(temp_data1$forecast_1to3, na.rm = TRUE)
average_forecast_6 <- mean(temp_data1$forecast_3to6, na.rm = TRUE)
average_forecast_9 <- mean(temp_data1$forecast_6to9, na.rm = TRUE)
str(average_forecast_3)
str(average_forecast_6)
str(average_forecast_9)
temp_data1 <- subset(temp_data1, select = -c(forecast_3_month, forecast_6_month, forecast_9_month))
print(names(temp_data1))
temp_data1$sales_0to1 = train$sales_1_month
temp_data1$sales_1to3 = train$sales_3_month - train$sales_1_month
temp_data1$sales_3to6 = train$sales_6_month - train$sales_3_month
temp_data1$sales_6to9 = train$sales_9_month - train$sales_6_month
average_sale_1 <- mean(temp_data1$sales_0to1, na.rm = TRUE)
average_sale_3 <- mean(temp_data1$sales_1to3, na.rm = TRUE)
average_sale_6 <- mean(temp_data1$sales_3to6, na.rm = TRUE)
average_sale_9 <- mean(temp_data1$sales_6to9, na.rm = TRUE)
str(average_sale_1)
str(average_sale_3)
str(average_sale_6)
str(average_sale_9)
temp_data1 <- subset(temp_data1, select = -c(sales_1_month, sales_3_month, sales_6_month, sales_9_month))
print(names(temp_data1))
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3))
# Print the result
print(missing_values)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$transit_rate))
# Print the result
print(missing_values)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$risk_flag)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(train$risk_flag)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$transit_rate)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(train$lead_time)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
temp_data3$transit_rate = train$in_transit_qty / train$lead_time
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(in_transit_qty, lead_time,deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(train$in_transit_qty)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
chosen_col_name = c("deck_risk","oe_constraint","ppap_risk","stop_auto_buy","rev_stop","potential_issue")
for (col in chosen_col_name) {
temp_data3[[col]] <- as.numeric(as.character(temp_data3[[col]]))
print(temp_data3[[col]])
}
temp_data3$transit_rate <- ifelse(train$lead_time == 0, 0, train$in_transit_qty / train$lead_time)
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(train$in_transit_qty)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train
chosen_col_name = c("deck_risk","oe_constraint","ppap_risk","stop_auto_buy","rev_stop","potential_issue")
# Assuming `factor_column` is the column you want to convert back to numeric
temp_data3$deck_risk <- as.numeric(as.character(temp_data3$deck_risk))
print(temp_data3$deck_risk)
temp_data3 = train
chosen_col_name = c("deck_risk","oe_constraint","ppap_risk","stop_auto_buy","rev_stop","potential_issue")
# Assuming `factor_column` is the column you want to convert back to numeric
temp_data3$deck_risk <- as.numeric(temp_data3$deck_risk)
print(temp_data3$deck_risk)
temp_data3 = train
chosen_col_name = c("deck_risk","oe_constraint","ppap_risk","stop_auto_buy","rev_stop","potential_issue")
# Assuming `factor_column` is the column you want to convert back to numeric
print(temp_data3$deck_risk)
temp_data3$deck_risk <- as.numeric(temp_data3$deck_risk)
print(temp_data3$deck_risk)
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(train$lead_time == 0, 0, train$in_transit_qty / train$lead_time)
temp_data3$risk_flag = train$deck_risk+train$oe_constraint+train$ppap_risk+train$stop_auto_buy+train$rev_stop+train$potential_issue
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(train$in_transit_qty)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
missing_values <- any(is.na(temp_data3$transit_rate))
# Print the result
print(missing_values)
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$deck_risk))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$oe_constraint))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$ppap_risk))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$stop_auto_buy))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$rev_stop))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$potential_issue))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$risk_flag)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$deck_risk)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$oe_constraint)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
print(temp_data3$oe_constraint)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$ppap_risk
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$ppap_risk
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$stop_auto_buy
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$potential_issue = as.factor(temp_data3$potential_issue)
temp_data3$potential_issue = revalue(temp_data3$potential_issue, c("0"="No", "1"="Yes"))
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$ppap_risk
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$stop_auto_buy
temp_data3$risk_flag = temp_data3$risk_flag+temp_data3$rev_stop
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
#train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
train(went_on_backorder ~ ., data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
set.seed(123)
train(went_on_backorder ~ . , data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
print(colnames(temp_data3))
set.seed(123)
train(went_on_backorder ~ . , data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
print(colnames(temp_data3))
set.seed(123)
train(went_on_backorder ~ . -sku , data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
temp_data3 = train_before_factor
temp_data3$transit_rate <- ifelse(temp_data3$lead_time == 0, 0, temp_data3$in_transit_qty / temp_data3$lead_time)
temp_data3$risk_flag = temp_data3$deck_risk+temp_data3$oe_constraint+temp_data3$ppap_risk+temp_data3$stop_auto_buy+temp_data3$rev_stop+temp_data3$potential_issue
missing_values <- any(is.na(temp_data3$risk_flag))
# Print the result
print(missing_values)
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop,potential_issue))
temp_data3$went_on_backorder = as.factor(temp_data3$went_on_backorder)
temp_data3$went_on_backorder = revalue(temp_data3$went_on_backorder, c("0"="No", "1"="Yes"))
print(colnames(temp_data3))
set.seed(123)
train(went_on_backorder ~ . -sku , data = temp_data3, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
