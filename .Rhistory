#str(test)
library(plyr)
train$potential_issue = revalue(train$potential_issue, c("0"="No", "1"="Yes"))
train[18:23] = lapply(train[18:23], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(train)
test$potential_issue = revalue(test$potential_issue, c("0"="No", "1"="Yes"))
test[18:22] = lapply(test[18:22], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(test)
library(caret)
library(e1071)
fitControl = trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
set.seed(123)
#train(went_on_backorder ~ . - sku, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
set.seed(123)
#train(went_on_backorder ~ national_inv, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(colnames(train))
logreg <- function(variables, dataset) {
set.seed(123)
modelBO = glm(variables, data = dataset, family = "binomial")
summary(modelBO)
}
crossv <- function(variables, dataset) {
set.seed(123)
results = suppressWarnings(train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC"))
print(results$results$ROC)
}
crossv_no_suppression <- function(variables, dataset) {
set.seed(123)
results = train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(results$results$ROC)
}
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy", "rev_stop")])
temp_data2 = train
temp_data2$risk_flag = risk_flag_sum
temp_data2 = subset(temp_data2, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy")])
temp_data3 = train
temp_data3$risk_flag = risk_flag_sum
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
temp_data4 = temp_data3
temp_data4$inventory_turnover_ratio1 <- ifelse((train$national_inv + train$in_transit_qty) == 0, 0, train$sales_1_month / ((train$national_inv + train$in_transit_qty) / 2))
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
)
crossv(formula, temp_data4)
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy", "rev_stop")])
temp_data2 = train
temp_data2$risk_flag = risk_flag_sum
temp_data2 = subset(temp_data2, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy")])
temp_data3 = train
temp_data3$risk_flag = risk_flag_sum
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
temp_data4 = temp_data3
temp_data4$inventory_turnover_ratio1 <- ifelse((train$national_inv + train$in_transit_qty) == 0, 0, train$sales_1_month / ((train$national_inv + train$in_transit_qty) / 2))
knitr::opts_chunk$set(warning = FALSE,
fig.height = 6,
fig.width = 6,
fig.align = "center")
train_before_factor = read.csv("Competition_Train.csv")
missing_values <- any(is.na(train_before_factor))
# Print the result
print(missing_values)
train = read.csv("Competition_Train.csv")
test = read.csv("Competition_Test.csv")
#str(train)
#str(test)
train$potential_issue = as.factor(train$potential_issue)
train[18:23] = lapply(train[18:23], as.factor)
#str(train)
test$potential_issue = as.factor(test$potential_issue)
test[18:22] = lapply(test[18:22], as.factor)
#str(test)
library(plyr)
train$potential_issue = revalue(train$potential_issue, c("0"="No", "1"="Yes"))
train[18:23] = lapply(train[18:23], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(train)
test$potential_issue = revalue(test$potential_issue, c("0"="No", "1"="Yes"))
test[18:22] = lapply(test[18:22], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(test)
library(caret)
library(e1071)
fitControl = trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
set.seed(123)
#train(went_on_backorder ~ . - sku, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
set.seed(123)
#train(went_on_backorder ~ national_inv, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(colnames(train))
logreg <- function(variables, dataset) {
set.seed(123)
modelBO = glm(variables, data = dataset, family = "binomial")
summary(modelBO)
}
crossv <- function(variables, dataset) {
set.seed(123)
results = suppressWarnings(train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC"))
print(results$results$ROC)
}
crossv_no_suppression <- function(variables, dataset) {
set.seed(123)
results = train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(results$results$ROC)
}
knitr::opts_chunk$set(warning = FALSE,
fig.height = 6,
fig.width = 6,
fig.align = "center")
train_before_factor = read.csv("Competition_Train.csv")
missing_values <- any(is.na(train_before_factor))
# Print the result
print(missing_values)
train = read.csv("Competition_Train.csv")
test = read.csv("Competition_Test.csv")
#str(train)
#str(test)
train$potential_issue = as.factor(train$potential_issue)
train[18:23] = lapply(train[18:23], as.factor)
#str(train)
test$potential_issue = as.factor(test$potential_issue)
test[18:22] = lapply(test[18:22], as.factor)
#str(test)
library(plyr)
train$potential_issue = revalue(train$potential_issue, c("0"="No", "1"="Yes"))
train[18:23] = lapply(train[18:23], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(train)
test$potential_issue = revalue(test$potential_issue, c("0"="No", "1"="Yes"))
test[18:22] = lapply(test[18:22], function(x) revalue(x, c("0"="No", "1"="Yes")))
#str(test)
library(caret)
library(e1071)
fitControl = trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
set.seed(123)
#train(went_on_backorder ~ . - sku, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
set.seed(123)
#train(went_on_backorder ~ national_inv, data = train, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(colnames(train))
logreg <- function(variables, dataset) {
set.seed(123)
modelBO = glm(variables, data = dataset, family = "binomial")
summary(modelBO)
}
crossv <- function(variables, dataset) {
set.seed(123)
results = suppressWarnings(train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC"))
print(results$results$ROC)
}
crossv_no_suppression <- function(variables, dataset) {
set.seed(123)
results = train(variables, data = dataset, method = "glm", family = "binomial", trControl = fitControl, metric = "ROC")
print(results$results$ROC)
}
temp_data1 = train
temp_data1 = subset(temp_data1, select = -c(sku, sales_1_month, rev_stop, forecast_9_month, stop_auto_buy, sales_1_month, forecast_3_month ))
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy", "rev_stop")])
temp_data2 = train
temp_data2$risk_flag = risk_flag_sum
temp_data2 = subset(temp_data2, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
risk_flag_sum = rowSums(train_before_factor[, c("deck_risk", "oe_constraint", "ppap_risk", "stop_auto_buy")])
temp_data3 = train
temp_data3$risk_flag = risk_flag_sum
temp_data3 = subset(temp_data3, select = -c(deck_risk,oe_constraint,ppap_risk,stop_auto_buy,rev_stop))
temp_data4 = temp_data3
temp_data4$inventory_turnover_ratio1 <- ifelse((train$national_inv + train$in_transit_qty) == 0, 0, train$sales_1_month / ((train$national_inv + train$in_transit_qty) / 2))
temp_data6 = temp_data4
temp_data6$risk_flag = temp_data6$risk_flag - train_before_factor$deck_risk
# Print the result
print(missing_values)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/30)
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90), temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90*min_bank/sales_3_month, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/sales_3_month, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90*min_bank/sales_3_month, temp_data6)
temp_data7 = temp_data6
temp_data7$inventory_compliance <- ifelse(train$national_inv >= train$min_bank, 1, 0)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
)
crossv(formula, temp_data7)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90*(min_bank/sales_3_month), temp_data6)
head(train$min_bank)
head(train$sales_3_month)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(formula, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90*min_bank/sales_3_month
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90 * min_bank / sales_3_month
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
- forecast_9_month - forecast_3_month
+ 90 * min_bank / sales_3_month
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ 90 * `min_bank` / `sales_3_month`
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ `min_bank/(sales_3_month/90)`
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90.0)
, temp_data6)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ (sales_3_month/90)
, temp_data6)
temp_data8 = temp_data7
temp_data8$safety_stock_ratio = train$min_bank/(train$sales_3_month/90)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
+ min_bank/(sales_3_month/90)
)
crossv(
formula, temp_data8)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
)
temp_data8 = temp_data7
temp_data8$safety_stock_ratio = train$min_bank/(train$sales_3_month/90)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
)
crossv(
formula, temp_data8)
head(train$sales_3_month)
head(train$sales_3_month/90)
temp_data8 = temp_data7
temp_data8$safety_stock_ratio = train$min_bank/(train$sales_3_month/90+1)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
+ local_bo_qty*pieces_past_due
- forecast_9_month - forecast_3_month
)
crossv(
formula, temp_data8)
temp_data8 = temp_data7
temp_data8$safety_stock_ratio = train$min_bank/(train$sales_3_month/90+1)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
- forecast_9_month - forecast_3_month
)
crossv(
formula, temp_data8)
temp_data7 = temp_data6
temp_data7$inventory_compliance <- ifelse(train$national_inv >= train$min_bank, 1, 0)
formula = as.formula(
went_on_backorder ~ . - sku +lead_time/in_transit_qty - lead_time
- perf_12_month_avg - perf_6_month_avg - sales_1_month - min_bank
+(forecast_6_month-forecast_3_month-forecast_3_month)/forecast_3_month
- forecast_9_month - forecast_3_month
)
crossv(formula, temp_data7)
logreg(formula, temp_data7)
